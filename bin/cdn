#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk')
const fs = require('fs')
const path = require('path')
const shell = require('shelljs')
const {
  createFile,
  hasFile
} = require('../utils/file')

program
  .version('1.0.3')

program
  .command('init [name]')
  .description(chalk.gray('Init'))
  .action((name, options) => {
    if (name) {
      hasFile({
        to: `./deploy-config/${name}`
      }).then(() => {
        createFile({
          from: path.resolve(__dirname, `../templates/config.json`),
          to: `./deploy-config/config.json`,
          replaceKey: name
        })
        fs.readdirSync(path.resolve(__dirname, `../templates/${name}`)).forEach(file => {
          createFile({
            from: path.resolve(__dirname, `../templates/${name}/${file}`),
            to: `./deploy-config/${name}/${file}`
          })
        })
      }).catch(() => console.log('Cancelled'))
    } else {
      console.log('Cancelled')
    }
  })

program
  .command('deploy [environment]')
  .description(chalk.gray('Deploy project'))
  .action((environment) => {
    shell.exec(`node_modules/.bin/cross-env DEPLOY_ENV=${environment || 'development'} node ${path.resolve(__dirname, '../index.js')}`)
  })

program.on('--help', () => {
    console.log()
    console.log('  Examples:')
    console.log()
    console.log('    $ cdn --help')
    console.log('    $ cdn -h')
  })

program.parse(process.argv)
