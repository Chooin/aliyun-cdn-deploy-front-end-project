#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk')
const fs = require('fs')
const path = require('path')

const {
  createFile,
  hasFile
} = require('../utils/file')
const index =  require('../index')

program
  .version('2.0.0')

program
  .command('init [type]')
  .description(chalk.gray('init aliyun|qiniu'))
  .action((type, options) => {
    if (type) {
      hasFile({
        to: `./deploy-config/${type}`
      }).then(() => {
        createFile({
          from: path.resolve(__dirname, `../templates/config.json`),
          to: `./deploy-config/config.json`,
          replace: [
            { from: 'type', to: type }
          ]
        })
        fs.readdirSync(path.resolve(__dirname, `../templates/${type}`)).forEach(file => {
          createFile({
            from: path.resolve(__dirname, `../templates/${type}/${file}`),
            to: `./deploy-config/${type}/${file}`
          })
        })
      }).catch(() => console.log('Cancelled'))
    } else {
      console.log('Cancelled')
    }
  })

program
  .command('deploy [environment]')
  .description(chalk.gray('deploy project'))
  .action((environment) => {
    process.env.DEPLOY_ENV = environment || 'development'
    index()
  })

program.on('--help', () => {
    console.log()
    console.log('  Examples:')
    console.log()
    console.log('    $ cdn init aliyun')
    console.log('    $ cdn deploy development')
  })

program.parse(process.argv)
